# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Javascript Routes
GET		/assets/javascripts/album/routes												com.ctrengine.photostash.controllers.api.AlbumController.javascriptRoutes()
GET		/assets/javascripts/story/routes												com.ctrengine.photostash.controllers.api.StoryController.javascriptRoutes()
GET		/assets/javascripts/photograph/routes											com.ctrengine.photostash.controllers.api.PhotographController.javascriptRoutes()
GET		/assets/javascripts/browser/routes												com.ctrengine.photostash.controllers.ui.BrowserController.javascriptRoutes()

# Map static resources from the /public folder to the /assets URL path
GET		/assets/*file			controllers.Assets.at(path="/public", file)

# Photostash API
POST		/v1/api/shoebox/organize													com.ctrengine.photostash.controllers.api.ShoeboxController.organize()
GET			/v1/api/shoebox/organize													com.ctrengine.photostash.controllers.api.ShoeboxController.organizeStatus()
#DELETE		/v1/api/shoebox/organize													com.ctrengine.photostash.controllers.api.ShoeboxController.organizeStop()
#POST		/v1/api/shoebox/tidy/:albumId/:storyId
#POST		/v1/api/shoebox/tidy/:albumId
#POST		/v1/api/shoebox/tidy
#POST		/v1/api/shoebox/clean/:albumId/:storyId
#POST		/v1/api/shoebox/clean/:albumId
#POST		/v1/api/shoebox/clean 

#GET		/v1/api/photo/:photographId/image/rotate
GET		/v1/api/photo/:photographId/image/resize/:squareSize							com.ctrengine.photostash.controllers.api.PhotographController.getPhotographResizeImage(photographId: String, squareSize: Integer)
GET		/v1/api/photo/:photographId/image												com.ctrengine.photostash.controllers.api.PhotographController.getPhotographImage(photographId: String)
#POST		/v1/api/photo/:photographId/rotate
GET		/v1/api/photo/:photographId														com.ctrengine.photostash.controllers.api.PhotographController.getPhotograph(photographId: String, extended: Boolean ?= false)
GET		/v1/api/photo																	com.ctrengine.photostash.controllers.api.PhotographController.getPhotographs(extended: Boolean ?= false)
GET		/v1/api/story/:storyId/thumbnail												com.ctrengine.photostash.controllers.api.StoryController.getStoryThumbnail(storyId: String, extended: Boolean ?= false)
POST	/v1/api/story/:storyId/resize/:squareSize										com.ctrengine.photostash.controllers.api.StoryController.resizeStoryPhotographs(storyId: String, squareSize: Integer)
GET		/v1/api/story/recent/:size														com.ctrengine.photostash.controllers.api.StoryController.getRecentStories(size: Int, extended: Boolean ?= false)													
GET		/v1/api/story/:storyId															com.ctrengine.photostash.controllers.api.StoryController.getStory(storyId: String, extended: Boolean ?= false)
GET		/v1/api/story																	com.ctrengine.photostash.controllers.api.StoryController.getStories(extended: Boolean ?= false)
GET		/v1/api/album/:albumId															com.ctrengine.photostash.controllers.api.AlbumController.getAlbum(albumId: String, extended: Boolean ?= false)
GET		/v1/api/album																	com.ctrengine.photostash.controllers.api.AlbumController.getAlbums(extended: Boolean ?= false)

# Photostash UI 
GET		/v1/ui/browser																	com.ctrengine.photostash.controllers.ui.BrowserController.browser()
GET		/																				com.ctrengine.photostash.controllers.ui.BrowserController.index()
  	